{"ast":null,"code":"function getCoordOfSquare(row, col) {\n  var squareCoord = [[], [], [], [], [], [], [], [], [], []];\n  var row_lower_limit = Math.floor(row / 3) * 3;\n  var row_upper_limit = (Math.floor(row / 3) + 1) * 3;\n  var col_lower_limit = Math.floor(col / 3) * 3;\n  var col_upper_limit = (Math.floor(col / 3) + 1) * 3;\n  var array_index = 0;\n\n  for (var r = row_lower_limit; r < row_upper_limit; r++) {\n    for (var i = 0; i < 3; i++) {\n      squareCoord[array_index].push(r);\n      array_index++;\n    }\n  }\n\n  array_index = 0;\n\n  for (var j = 0; j < 3; j++) {\n    for (var c = col_lower_limit; c < col_upper_limit; c++) {\n      squareCoord[array_index].push(c);\n      array_index++;\n    }\n  }\n\n  console.table(squareCoord);\n  return squareCoord;\n}\n\nexport var main = () => {\n  getCoordOfSquare(8, 8);\n};","map":{"version":3,"sources":["/Users/shayaansaiyed/Documents/Projects/Sudoku/sudoku-solver/src/sudokuSolver.js"],"names":["getCoordOfSquare","row","col","squareCoord","row_lower_limit","Math","floor","row_upper_limit","col_lower_limit","col_upper_limit","array_index","r","i","push","j","c","console","table","main"],"mappings":"AACA,SAASA,gBAAT,CAA0BC,GAA1B,EAA+BC,GAA/B,EAAmC;AAC/B,MAAIC,WAAW,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,CAAlB;AAEA,MAAIC,eAAe,GAAGC,IAAI,CAACC,KAAL,CAAWL,GAAG,GAAG,CAAjB,IAAsB,CAA5C;AACA,MAAIM,eAAe,GAAG,CAACF,IAAI,CAACC,KAAL,CAAWL,GAAG,GAAG,CAAjB,IAAsB,CAAvB,IAA4B,CAAlD;AAEA,MAAIO,eAAe,GAAGH,IAAI,CAACC,KAAL,CAAWJ,GAAG,GAAG,CAAjB,IAAsB,CAA5C;AACA,MAAIO,eAAe,GAAG,CAACJ,IAAI,CAACC,KAAL,CAAWJ,GAAG,GAAG,CAAjB,IAAsB,CAAvB,IAA4B,CAAlD;AAEA,MAAIQ,WAAW,GAAG,CAAlB;;AACA,OAAK,IAAIC,CAAC,GAAGP,eAAb,EAA8BO,CAAC,GAAGJ,eAAlC,EAAmDI,CAAC,EAApD,EAAuD;AACnD,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA0B;AACtBT,MAAAA,WAAW,CAACO,WAAD,CAAX,CAAyBG,IAAzB,CAA8BF,CAA9B;AACAD,MAAAA,WAAW;AACd;AACJ;;AAEDA,EAAAA,WAAW,GAAG,CAAd;;AACA,OAAI,IAAII,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA0B;AACtB,SAAK,IAAIC,CAAC,GAAGP,eAAb,EAA8BO,CAAC,GAAGN,eAAlC,EAAmDM,CAAC,EAApD,EAAuD;AACnDZ,MAAAA,WAAW,CAACO,WAAD,CAAX,CAAyBG,IAAzB,CAA8BE,CAA9B;AACAL,MAAAA,WAAW;AACd;AACJ;;AACDM,EAAAA,OAAO,CAACC,KAAR,CAAcd,WAAd;AACA,SAAOA,WAAP;AACH;;AAED,OAAO,IAAIe,IAAI,GAAG,MAAM;AACpBlB,EAAAA,gBAAgB,CAAC,CAAD,EAAI,CAAJ,CAAhB;AACH,CAFM","sourcesContent":["\nfunction getCoordOfSquare(row, col){\n    var squareCoord = [[], [], [], [], [], [], [], [], [], []];\n    \n    var row_lower_limit = Math.floor(row / 3) * 3;\n    var row_upper_limit = (Math.floor(row / 3) + 1) * 3;\n\n    var col_lower_limit = Math.floor(col / 3) * 3;\n    var col_upper_limit = (Math.floor(col / 3) + 1) * 3; \n    \n    var array_index = 0;\n    for (var r = row_lower_limit; r < row_upper_limit; r++){\n        for(var i = 0; i < 3; i++){\n            squareCoord[array_index].push(r)\n            array_index++;\n        }\n    }\n\n    array_index = 0;\n    for(var j = 0; j < 3; j++){\n        for (var c = col_lower_limit; c < col_upper_limit; c++){\n            squareCoord[array_index].push(c)\n            array_index++;\n        }\n    }\n    console.table(squareCoord);\n    return squareCoord;\n}\n\nexport var main = () => {\n    getCoordOfSquare(8, 8);\n}"]},"metadata":{},"sourceType":"module"}