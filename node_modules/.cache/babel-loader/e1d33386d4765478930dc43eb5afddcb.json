{"ast":null,"code":"var _jsxFileName = \"/Users/shayaansaiyed/Documents/Projects/Sudoku/sudoku-solver/src/components/Board.js\";\nimport React, { useState } from 'react';\nimport Square from './Square';\nimport './../App.css';\n\nfunction Board(props) {\n  let [grid, setGrid] = useState(Array(9).fill(Array(9).fill('')));\n\n  let generateRow = (array, rowNum) => {\n    var row = [];\n\n    for (let i = 0; i < 9; i++) {\n      if (array[i] !== 0) {\n        row.push( /*#__PURE__*/React.createElement(Square, {\n          value: array[i],\n          row: rowNum,\n          col: i,\n          handleChange: handleValueChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 22\n          }\n        }));\n      } else {\n        row.push( /*#__PURE__*/React.createElement(Square, {\n          value: \" \",\n          row: rowNum,\n          col: i,\n          handleChange: handleValueChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 22\n          }\n        }));\n      }\n    }\n\n    return row;\n  };\n\n  let generateGrid = input2DArr => {\n    var tempgrid = [];\n\n    for (let i = 0; i < 9; i++) {\n      var row = generateRow(input2DArr[i], i);\n      tempgrid.push( /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 23\n        }\n      }, row));\n    }\n\n    return tempgrid;\n  };\n\n  let handleValueChange = (row, col, val) => {\n    let tempGrid = grid;\n    tempGrid[row][col] = val;\n    console.log(tempGrid); //console.table(tempGrid)\n\n    setGrid(tempGrid);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, generateGrid(grid)));\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/shayaansaiyed/Documents/Projects/Sudoku/sudoku-solver/src/components/Board.js"],"names":["React","useState","Square","Board","props","grid","setGrid","Array","fill","generateRow","array","rowNum","row","i","push","handleValueChange","generateGrid","input2DArr","tempgrid","col","val","tempGrid","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,cAAP;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAACM,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAcD,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,EAAd,CAAd,CAAD,CAA9B;;AAEA,MAAIC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,QAAIC,GAAG,GAAG,EAAV;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA2B;AACvB,UAAIH,KAAK,CAACG,CAAD,CAAL,KAAa,CAAjB,EAAmB;AACfD,QAAAA,GAAG,CAACE,IAAJ,eAAS,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAEJ,KAAK,CAACG,CAAD,CAApB;AAAyB,UAAA,GAAG,EAAEF,MAA9B;AAAsC,UAAA,GAAG,EAAEE,CAA3C;AAA8C,UAAA,YAAY,EAAEE,iBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AACH,OAFD,MAEO;AACHH,QAAAA,GAAG,CAACE,IAAJ,eAAS,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,GAAd;AAAkB,UAAA,GAAG,EAAEH,MAAvB;AAA+B,UAAA,GAAG,EAAEE,CAApC;AAAuC,UAAA,YAAY,EAAEE,iBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AACH;AACJ;;AACD,WAAOH,GAAP;AACD,GAVD;;AAYA,MAAII,YAAY,GAAIC,UAAD,IAAgB;AACjC,QAAIC,QAAQ,GAAG,EAAf;;AACA,SAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA2B;AACvB,UAAID,GAAG,GAAGH,WAAW,CAACQ,UAAU,CAACJ,CAAD,CAAX,EAAgBA,CAAhB,CAArB;AACAK,MAAAA,QAAQ,CAACJ,IAAT,eAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKF,GAAL,CAAd;AACH;;AACD,WAAOM,QAAP;AACD,GAPD;;AASA,MAAIH,iBAAiB,GAAG,CAACH,GAAD,EAAMO,GAAN,EAAWC,GAAX,KAAmB;AACzC,QAAIC,QAAQ,GAAGhB,IAAf;AACAgB,IAAAA,QAAQ,CAACT,GAAD,CAAR,CAAcO,GAAd,IAAqBC,GAArB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAHyC,CAIzC;;AACAf,IAAAA,OAAO,CAACe,QAAD,CAAP;AACD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,YAAY,CAACX,IAAD,CAAjB,CADJ,CADF;AAKD;;AAED,eAAeF,KAAf","sourcesContent":["import React, {useState} from 'react';\nimport Square from './Square'\nimport './../App.css';\n\nfunction Board(props) {\n  let [grid, setGrid] = useState(Array(9).fill(Array(9).fill('')))\n  \n  let generateRow = (array, rowNum) => {\n    var row = []\n    for (let i = 0; i < 9; i++){\n        if (array[i] !== 0){\n            row.push(<Square value={array[i]} row={rowNum} col={i} handleChange={handleValueChange}/>);\n        } else {\n            row.push(<Square value=' ' row={rowNum} col={i} handleChange={handleValueChange}/>);\n        }\n    }\n    return row;\n  }\n\n  let generateGrid = (input2DArr) => {\n    var tempgrid = [];\n    for (let i = 0; i < 9; i++){\n        var row = generateRow(input2DArr[i], i)\n        tempgrid.push(<li>{row}</li>);\n    }\n    return tempgrid;\n  }\n\n  let handleValueChange = (row, col, val) => {\n    let tempGrid = grid;\n    tempGrid[row][col] = val;\n    console.log(tempGrid);\n    //console.table(tempGrid)\n    setGrid(tempGrid);\n  }\n\n  return (\n    <div className=\"board\">\n        <ul>{generateGrid(grid)}</ul>\n    </div>\n  );\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}